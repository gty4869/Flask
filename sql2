-- 增删改查(curd)
-- 链接数据库（p后面是密码）
mysql -uroot -p密码

-- 退出数据库
exit/quit/ctrl+d

-- 显示时间
select now()

-- 显示版本
select version()

-- 创建数据库
create database 数据库名 charset=utf8

-- 创建表
-- auto_increment 表示自动增长
-- not null 表示不能为空
-- primary key 表示主键
-- default 默认值
create table xxx if not exists(id int, name varchar(30))；
create table yyy if not exists(
	id int primary key not null auto_increment, 
	name varchar(30) not null,
	gander enum not null default="女"
	)；

-----------------------------------------------------------------------------------
-- 查看数据库
show databases

-- 显示当前数据库中所有表
show tables

-- 显示当前使用数据库
select database()

-- 查看创建数据库的语句
show create database 数据库名

-- 查看表的创建语句
show create table 表名字

-- 查看表结构
desc 表名

-- 使用数据库
use 数据库名

-- 删除视图
drop view v_xxx_xxx

-----------------------------------------------------------------------------------
-- 删除数据库
drop database 数据库名
-- 删除表
drop table 表名
-- 删除字段
alter table students drop high;

	--物理删除
	delete from 表名; --整个数据表中的全部数据删除
	delete from 表名 where name="小李飞刀";

	--逻辑删除
	--用一个字段来表示 这条消息是否已经不能在使用了
	--给student表添加一个is_delete字段 bit类型
	alter table students add is_delete bit default 0;
	update students set is_delete=1 where id=11;

	-- 查看的时候 is_delete=1的结果是被注销的结果
	select * from students where is_delete=1
-----------------------------------------------------------------------------------

students表
+--------+----------------------------+------+-----+------------+----------------+
| Field  | Type                       | Null | Key | Default    | Extra          |
+--------+----------------------------+------+-----+------------+----------------+
| id     | int(10) unsigned           | NO   | PRI | NULL       | auto_increment |
| name   | varchar(30)                | YES  |     | NULL       |                |
| age    | tinyint(3) unsigned        | YES  |     | 0          |                |
| gender | enum('男','女','保密')      | YES  |     | 保密       |                |
| cls_id | int(10) unsigned           | YES  |     | NULL       |                |
| birth  | date                       | YES  |     | 2000-01-01 |                |
+--------+----------------------------+------+-----+------------+----------------+
------------------值的修改
-- 全列插入
insert into 表名 values(所有对应值)

-- 将select出来的结果表当做数值传入的时候不用写values
insert into good_cates(name) select cate_name from goods group by cate_name;

-- 主键字段可以用 0/null/default 来占位，性别可以用索引代替，从1开始
insert into students values(0, "陈意涵", 20, "女", 1, "1990-07-28");

-- 部分插入
insert into students(字段名, 字段名) values (对应值，对应值)

-- 多行插入
insert into students(name, gender) values ("小乔", 2)，("大桥", 2);
insert into students values(0, "陈意涵", 20, 2, 1, "1990-07-28"), (0, "陈雪珍", 20, 2, 1, "1990-07-28");

-- 修改表里的数据
update students set gender=1 where id=8; -- 修改id为8的值
update students set age=22, gender=1 where id=8; -- 修改id为8的值

------------------字段的修改
-- 插入字段
alter table students add birthday datetime;

-- 修改字段类型，不改名
alter table students modify birthday date;

-- 修改字段类型及字段名
alter table students change birthday birth date default "2000-01-01";

--插入外键约束
alter table goods add foreign key (cate_id) references goods_cates(id);
delete from goods where id=23;

-----------------------------------------------------------------------------------
-- 查询表里的数据
select * from students;

-- 指定条件查询
select * from students where gender="女";
select * from students where id<9;

-- 查询指定列
-- select 列1,列2,...from 表名;
select name,gender from students;

-- 可以用as为列或者表指定别名
select name as 姓名,gender as 性别 from students;

-- 查看字段时候显示的顺序
select id as 序号,gender as 性别,name as 姓名 from students;


